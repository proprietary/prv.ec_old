// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var ec_prv = ec_prv || {};

/**
 * @const
 * @namespace
 */
ec_prv.fbs = ec_prv.fbs || {};

/**
 *
 * This when serialized to bytes is used as the key for lookup in the RocksDB store.
 *
 *
 * @constructor
 */
ec_prv.fbs.URLIndex = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ec_prv.fbs.URLIndex}
 */
ec_prv.fbs.URLIndex.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ec_prv.fbs.URLIndex=} obj
 * @returns {ec_prv.fbs.URLIndex}
 */
ec_prv.fbs.URLIndex.getRootAsURLIndex = function(bb, obj) {
  return (obj || new ec_prv.fbs.URLIndex).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ec_prv.fbs.URLIndex=} obj
 * @returns {ec_prv.fbs.URLIndex}
 */
ec_prv.fbs.URLIndex.getSizePrefixedRootAsURLIndex = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ec_prv.fbs.URLIndex).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
ec_prv.fbs.URLIndex.prototype.version = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb_pos + offset) : 1;
};

/**
 * @returns {flatbuffers.Long}
 */
ec_prv.fbs.URLIndex.prototype.id = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 */
ec_prv.fbs.URLIndex.startURLIndex = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} version
 */
ec_prv.fbs.URLIndex.addVersion = function(builder, version) {
  builder.addFieldInt8(0, version, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} id
 */
ec_prv.fbs.URLIndex.addId = function(builder, id) {
  builder.addFieldInt64(1, id, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ec_prv.fbs.URLIndex.endURLIndex = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
ec_prv.fbs.URLIndex.finishURLIndexBuffer = function(builder, offset) {
  builder.finish(offset);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
ec_prv.fbs.URLIndex.finishSizePrefixedURLIndexBuffer = function(builder, offset) {
  builder.finish(offset, undefined, true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} version
 * @param {flatbuffers.Long} id
 * @returns {flatbuffers.Offset}
 */
ec_prv.fbs.URLIndex.createURLIndex = function(builder, version, id) {
  ec_prv.fbs.URLIndex.startURLIndex(builder);
  ec_prv.fbs.URLIndex.addVersion(builder, version);
  ec_prv.fbs.URLIndex.addId(builder, id);
  return ec_prv.fbs.URLIndex.endURLIndex(builder);
}

// Exports for Node.js and RequireJS
this.ec_prv = ec_prv;
